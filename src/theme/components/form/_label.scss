
@use '../../base/abstracts' as *;

// -----------------------------------------------------------------------------
// #region: MAPS & MIXINS
// -----------------------------------------------------------------------------

// stylelint-disable custom-property-no-missing-var-function
$label-variants: (
  'error': (
    --label-color: var(--color-error-text),
  ),
  'success': (
    --label-color: var(--color-success-text),
  ),
);

$label-sizes: (
  'sm': (
    --label-font-size: var(--font-size-caption),
    --label-line-height: var(--line-height-caption),
  ),
  'base': (
    --label-font-size: var(--font-size-base),
    --label-line-height: var(--line-height-base),
  ),
  'lg': (
    --label-font-size: var(--font-size-lg),
    --label-line-height: var(--line-height-lg),
  ),
);
// stylelint-enable custom-property-no-missing-var-function

@mixin label-variants($map) {
  @each $variant, $props in $map {
    &.label-#{$variant} {
      @each $prop, $value in $props {
        #{$prop}: #{$value};
      }
    }
  }
}

@mixin label-states {
  &:hover {
    @media (any-hover: hover) {
      --label-color: var(--color-ink-primary);
    }
  }

  &:focus-visible {
    outline: 2px solid var(--color-focus-ring);
    outline-offset: 2px;
  }
}
// #endregion

// -----------------------------------------------------------------------------
// #region: BASE
// -----------------------------------------------------------------------------

@scope (label) {
  :scope {
    --label-color: var(--color-ink-2ry);
    --label-font-size: var(--font-size-base);
    --label-line-height: var(--line-height-base);
    --label-margin-bottom: var(--size-half);

    @include text-format('base');


    // stylelint-disable-next-line no-duplicate-selectors
    & {
      color: var(--label-color);
      cursor: pointer;
      display: block;
      font-size: var(--label-font-size);
      line-height: var(--label-line-height);
      margin-bottom: var(--label-margin-bottom);
      user-select: none;
    }

    @include label-states;
    @include label-variants($label-variants);
    @include label-variants($label-sizes);
  }
}

// #endregion

// -----------------------------------------------------------------------------
// #region: FLOAT LABEL COMPONENT
// -----------------------------------------------------------------------------

@scope (.form-float) {
  :scope {
    --float-label-color: var(--color-ink-2ry);
    --float-label-color-active: var(--color-ink-text-brand);
    --float-label-font-size: var(--font-size-base);
    --float-label-font-size-active: var(--font-size-caption);
    --float-label-line-height: var(--line-height-base);
    --float-label-line-height-active: var(--line-height-caption);
    --float-label-top: var(--size-2);
    --float-label-top-active: var(--size-half);
    --float-label-left: var(--padding-x-input);
    --float-label-transition: all var(--duration-short) var(--easing-base);

    position: relative;

    label {
      color: var(--float-label-color);
      cursor: text;
      display: block;
      font-size: var(--float-label-font-size);
      line-height: var(--float-label-line-height);
      margin: 0;
      pointer-events: none;
      position: absolute;
      inset-inline-start: var(--float-label-left);
      top: var(--float-label-top);
      transition: var(--float-label-transition);
      z-index: 1;
    }

    // Autofill detection для input
    &:has(input:-webkit-autofill) {
      --icon-stroke: var(--color-ink-2ry-brand);
    }

    &:has(input:-webkit-autofill:not(:focus)) {
      label {
        color: transparent;
      }
    }

    // Firefox autofill fallback
    &:has(input:-moz-ui-invalid:not(output)) {
      label {
        color: var(--float-label-color-active);
        font-size: var(--float-label-font-size-active);
        line-height: var(--float-label-line-height-active);
        top: var(--float-label-top-active);
      }
    }
  }

  // Input states
  input {
    &::placeholder {
      color: transparent;
    }

    &:focus ~ label,
    &:not(:placeholder-shown) ~ label {
      color: var(--float-label-color-active);
      font-size: var(--float-label-font-size-active);
      line-height: var(--float-label-line-height-active);
      top: var(--float-label-top-active);
    }

    &:focus ~ label {
      --float-label-color-active: var(--color-focus-ring);
    }

    // :user-valid/invalid with fallback
    &:user-invalid ~ label,
    &:invalid:not(:focus):not(:placeholder-shown) ~ label {
      color: var(--color-error-text);
    }

    &:user-valid ~ label,
    &:valid:not(:focus):not(:placeholder-shown) ~ label {
      color: var(--color-success-text);
    }
  }

  // Select states
  select {
    &:focus ~ label {
      --float-label-color-active: var(--color-focus-ring);

      color: var(--float-label-color-active);
      font-size: var(--float-label-font-size-active);
      line-height: var(--float-label-line-height-active);
      top: var(--float-label-top-active);
    }

    // Если select имеет выбранное значение (не первый пустой option)
    &:not([value=""]):not([value]) ~ label,
    &[value]:not([value=""]) ~ label {
      color: var(--float-label-color-active);
      font-size: var(--float-label-font-size-active);
      line-height: var(--float-label-line-height-active);
      top: var(--float-label-top-active);
    }

    // :user-valid/invalid with fallback
    &:user-invalid ~ label,
    &:invalid:not(:focus):not(:placeholder-shown) ~ label {
      color: var(--color-error-text);
    }

    &:user-valid ~ label,
    &:valid:not(:focus):not(:placeholder-shown) ~ label {
      color: var(--color-success-text);
    }
  }

  // Textarea states
  textarea {
    &::placeholder {
      color: transparent;
    }

    &:focus ~ label,
    &:not(:placeholder-shown) ~ label {
      color: var(--float-label-color-active);
      font-size: var(--float-label-font-size-active);
      line-height: var(--float-label-line-height-active);
      top: var(--float-label-top-active);
    }

    &:focus ~ label {
      --float-label-color-active: var(--color-focus-ring);
    }

    &:user-invalid ~ label {
      --float-label-color-active: var(--color-error-text);
    }

    &:user-valid ~ label {
      --float-label-color-active: var(--color-success-text);
    }
  }
}

// #endregion
