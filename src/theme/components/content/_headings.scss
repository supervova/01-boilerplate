@use 'sass:map';
@use '../../base/abstracts' as *;

// -----------------------------------------------------------------------------
// #region: MAPS & MIXINS
// -----------------------------------------------------------------------------

$heading-variants: (
  'title': (
    --heading-level: title,
    --heading-weight: var(--font-weight-titles, bold),
    --heading-spacing: var(--letter-spacing-title, normal),
    --heading-family: var(--font-family-titles),
  ),
  'h2': (
    --heading-level: h2,
    --heading-weight: var(--font-weight-h2, bold),
    --heading-spacing: var(--letter-spacing-h2, normal),
    --heading-family: var(--font-family-titles),
  ),
  'h3': (
    --heading-level: h3,
    --heading-weight: var(--font-weight-h3, bold),
    --heading-spacing: var(--letter-spacing-h3),
    --heading-family: inherit,
  ),
  'base': (
    --heading-level: base,
    --heading-weight: var(--font-weight-h4, bold),
    --heading-spacing: var(--letter-spacing-base),
    --heading-family: inherit,
  ),
);

$heading-elements: (
  'h1': 'title',
  'h2': 'h2',
  'h3': 'h3',
  'h4': 'base',
  'h5': 'base',
  'h6': 'base',
);

@mixin heading-base {
  font-family: var(--heading-family, inherit);
  font-weight: var(--heading-weight, bold);
  letter-spacing: var(--heading-spacing, normal);
  margin-block-end: var(--size-2);
  margin-block-start: 0;
  text-rendering: optimizeLegibility;

  @include text-format(var(--heading-level));
}

@mixin heading-display {
  display: block;
  text-wrap: balance;
}

@mixin heading-elements($elements, $variants) {
  @each $element, $variant in $elements {
    #{$element} {
      @extend %heading-base;
      @each $prop, $value in map.get($variants, $variant) {
        #{$prop}: #{$value};
      }
    }
  }
}
// #endregion

// -----------------------------------------------------------------------------
// #region: BASE
// -----------------------------------------------------------------------------

%heading-base {
  @include heading-base;
}

@include heading-elements($heading-elements, $heading-variants);

// Utility classes
.h1, .h2, .h3, .h4, .h5, .h6 {
  @extend %heading-base;
}

.h1 {
  @include heading-display;
  @each $prop, $value in map.get($heading-variants, 'title') {
    #{$prop}: #{$value};
  }
}

.h2 {
  @include heading-display;
  @each $prop, $value in map.get($heading-variants, 'h2') {
    #{$prop}: #{$value};
  }
}

.h3 {
  @include heading-display;
  @each $prop, $value in map.get($heading-variants, 'h3') {
    #{$prop}: #{$value};
  }
}

.h4 {
  @include heading-display;
  @each $prop, $value in map.get($heading-variants, 'base') {
    #{$prop}: #{$value};
  }
}

.h5, .h6 {
  @each $prop, $value in map.get($heading-variants, 'base') {
    #{$prop}: #{$value};
  }
}
// #endregion

// -----------------------------------------------------------------------------
// #region: CONTEXTUAL SPACING
// -----------------------------------------------------------------------------

:where(address, blockquote, div, dl, figure, form, ol, p, pre, table, ul)
  + :is(h2, h3, h4, h5, h6, .h2, .h3, .h4, .h5, .h6) {
  margin-block-start: var(--margin-top-subhead, var(--size-line));
}
// #endregion
